/*                    While e Do While - Estrutura de repeti√ß√£o
 *
 * üìò Conceito de while e do while
 *      - As estruturas **while** e **do while** s√£o estruturas de repeti√ß√£o (ou la√ßos de repeti√ß√£o) 
 *      utilizadas para executar um bloco de c√≥digo v√°rias vezes, desde que uma condi√ß√£o l√≥gica seja verdadeira.
 * 
 *    A diferen√ßa entre elas √© que o **while** verifica a condi√ß√£o antes de executar o bloco de c√≥digo,
 *    enquanto o **do while** executa o bloco de c√≥digo pelo menos uma vez antes de verificar a condi√ß√£o.
 * 
 *    
 * üîÅ while ‚Äì Conceito
 *   A estrutura **while** executa um bloco de c√≥digo enquanto uma condi√ß√£o for verdadeira.
 *     -> A condi√ß√£o √© testada antes da execu√ß√£o;
 *     -> Se a condi√ß√£o for falsa, o bloco de c√≥digo n√£o ser√° executado;
 * 
 * 
 * üîÅ do while ‚Äì Conceito
 *   A estrutura **do while** executa um bloco de c√≥digo pelo menos uma vez e, em seguida, continua a execut√°-lo 
 *   enquanto a condi√ß√£o for verdadeira.
 *    -> A condi√ß√£o √© testada ap√≥s a execu√ß√£o do bloco de c√≥digo;
 *    -> O bloco de c√≥digo sempre √© executado pelo menos uma vez;
*/


// 1¬∫ Exmplo: ** while **
// let i = 0;
// while (i <= 10) {
//   console.log(i);
//   i++;
// }


/*
 * üé≤ Math.random()
 *     O m√©todo Math.random() em JavaScript √© usado para gerar n√∫meros aleat√≥rios. 
 *     Ele retorna um n√∫mero decimal aleat√≥rio entre 0 (inclusive) e 1 (exclusivo).
*/

function random(min, max) {
  const r = Math.random() * (max - min) + min;
  return Math.floor(r) // A Func√£o Math.floor() -> Serve para arredondar um n√∫mero para baixo at√© o inteiro mais pr√≥ximo.
};

const min = 1;
const max = 50;
let rand = random(min, max);

while (rand !== 10) { // A codi√ß√£o while so vai parar quando for 'false'.
  rand = random(min, max);
  console.log(rand);
}

console.log('##############################################')

do {
  console.log(rand)
}while(rand !== 10);
